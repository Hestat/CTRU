#!/bin/bash
# Eitest investigation script
# https://www.abuseat.org
# https://sitecheck.sucuri.net/

###Set vars
CONF="/etc/ctru.conf"
SCRIPTNAME="$0"
TIME=$(date +%Y.%m.%d.%H:%M:%S)
LOGDIR="/var/log/eitest/"
LOGFILE="eitest.log"
ROTATEFILE="eitest"
ROTATEDIR="/etc/logrotate.d/"
CONNIP=$(grep TRACKIP $CONF | cut -d "=" -f2)
MAILTO=$(grep MAILADDR $CONF | cut -d "=" -f2) 
SELECTION="$1"
###

###Check for root
function checkroot {
if [[ $EUID -ne 0 ]]; then
  echo "Must be run as root."
  exit 0
fi
}
###

###Set conf

function configure {
	if [ ! -f "$CONF" ]; then
		touch /etc/ctru.conf
		echo -e "##IP you wish to track###" >> $CONF
		echo -e "TRACKIP=" >> $CONF
		echo -e >> $CONF
		echo -e "##Email to sent alert to on hit###" >> $CONF
		echo -e "MAILADDR=" >> $CONF
	else
		echo -e "Configuration file exists"
	fi
}

###check the logs

function logcheck {
	find /var/log/eitest/ -maxdepth 1 -name '*.log' -type f -exec stat -c "%y %n" {} + | sort -r | head -n2 |awk '{print$4}' | xargs cat
}

###Make log dir and file
function preplog {
#Create log dir
 if [ ! -d "$LOGDIR" ]; then
   mkdir -p "$LOGDIR"
 fi
 #Touch log file
 if [ -z "$LOGDIR$LOGFILE" ]; then 
  touch "$LOGDIR$LOGFILE"
 fi
 #Set up log rotate conf file
 if [ -d "$ROTATEDIR" ]; then
  touch "$ROTATEDIR$ROTATEFILE"
  echo "
   "$LOGDIR$LOGFILE"  {
    compress
    daily
    notifempty
    missingok
    rotate 30
    sharedscripts
    postrotate
        /bin/kill -HUP \`ps f | grep "$SCRIPTNAME" | grep -v grep | awk '{print $1}' 2>/dev/null\` 2> /dev/null || true
    endscript
  }" > "$ROTATEDIR$ROTATEFILE"
else
  echo "Logrotate not found at "$ROTATEDIR"... Please setup logrotate then run this again."
  exit 1
 fi
}


###Connect
function connect {
# Watch for connections to sinkhole
if [ -e /etc/systemd ]; then
 connect=$(ss -antp | grep "$CONNIP");
 else
 connect=$(netstat -tpn | grep $CONNIP);
fi
}
###

###Capture
function capture {
# If connection found then capture data
 if [ -n "$connect" ]; then

  # Get pid from connection
  if [ -e /etc/systemd ];then
  PID=$(echo "$connect" | grep -Eio "pid=[0-9]{1,}" | cut -d= -f2|sort|uniq);
  else
  PID=$(echo $connect | awk '{print$7}' | cut -d '/' -f1);
  fi

  # Create pid log
  touch "$LOGDIR/strace-$PID.out"

  # Strace pid
  (strace -yrTfs 1024 -e trace=sendto,connect,open,write -p $PID -o "$LOGDIR/strace-$PID.out" &)

  # Get open files from lsof
  (lsof -p $PID > $LOGDIR/eitest-files-$PID.log &)

  # Log some basic info about the connection and process
  echo "$TIME" >> "$LOGDIR$LOGFILE"
  #ps aux | awk "(\$2 ~ /$PID/)"'{print $0}' >> "$LOGDIR$LOGFILE";
  echo $connect >> "$LOGDIR$LOGFILE";
 else
  exit 0
fi
}
###

###Install
function install {
  checkroot
  configure
  preplog
  echo -e "Please setup the IP you wish to track in $CONF"
  echo "Install complete.  To run scan, run 'xyz'"
}
###

###Scan
function runscan {
  checkroot
  connect
  capture
}
###

###Constant Scan

function conscan {
#while true; do
 checkroot
 connect
# if [ $($connect|wc -l) >= "1" 2>/dev/null ]; then
	capture
#	else
#	sleep 0.2
#	fi
#	done
}

#### Flags for additional features #####

while getopt ":m" opt; do
	case ${opt} in

		m ) #find hits and send mail
			if [[ $(logcheck) < 1 ]]; then #no hits found 
				exit 0
			else 
				echo -e "Subject: ALERT CTRU connection detected" > emailcontent
				logcheck >> $emailcontent
				cat $emailcontent | sendmail $MAILTO
				exit 0
			fi
	esac
done


##########################################

function askcmd {
echo
echo " (1) Install eitest"
echo " (2) Run eitest scan"
echo " (3) Setup continous scan"
echo " (4) Exit"
read cmd_option

case $cmd_option in
    1)
        echo
        install
        ;;
    2)
        echo
        runscan
        ;;

    3)  echo -e
	while true; do
	conscan 2>/dev/null  &
	sleep .2
	done
	;;

    4)
        echo
        exit 0
        ;;
    *) 
        echo
        echo "invalid option";
        sleep 1
        askcmd
        ;;
esac
echo
}

###Ask cmd if none specified
if [ "$SELECTION"  == install ]; then
  echo
  install
elif [ "$SELECTION" == scan ]; then
  echo
  runscan
  elif [ "$SELECTION" == conscan ];then
	  echo
	  conscan
else
  echo
  askcmd
fi
###

exit 0

